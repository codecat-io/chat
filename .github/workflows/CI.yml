name: Quack CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  tests:
    runs-on: ubuntu-latest
    services:
      mongo:
        image: mongo
        env:
          MONGO_INITDB_ROOT_USERNAME: chat
          MONGO_INITDB_ROOT_PASSWORD: chat
        options: >-
          --health-cmd mongo
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 27017:27017
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js 17.x
      uses: actions/setup-node@v3
      with:
        node-version: 17.x
        cache: 'npm'
    - run: npm ci
    - run: npm run lint:ci
    - run: npm run test:ci
      env:
        DATABASE_URL: mongodb://chat:chat@localhost:27017/chat?authSource=admin
  build:
    name: Build
    needs: tests
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Use Node.js 17.x
      uses: actions/setup-node@v3
      with:
        node-version: 17.x
        cache: 'npm'
    - run: npm i --production=false
    - run: npm run build
      env: 
        SERVER_URL: ${{ secrets.SERVER_URL }}
        NODE_ENV: production
    - run: npx cap sync
      working-directory: ./packages/app
    - name: Build with Gradle
      working-directory: ./packages/app/android
      run: ./gradlew build --warning-mode=all --stacktrace
    - name: Assemble Release Bundle
      working-directory: ./packages/app/android
      run: ./gradlew bundleRelease
    - uses: r0adkll/sign-android-release@v1
      name: Sign app APK
      id: sign_app
      with:
        releaseDirectory: ./packages/app/android/app/build/outputs/bundle/release
        signingKeyBase64: ${{ secrets.SIGNING_KEY }}
        alias: ${{ secrets.ALIAS }}
        keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
        keyPassword: ${{ secrets.KEY_PASSWORD }}
      env:
        BUILD_TOOLS_VERSION: "30.0.2"
    - name: Archive production artifacts
      uses: actions/upload-artifact@v3
      with:
        name: android-bundle
        path: ${{steps.sign_app.outputs.signedReleaseFile}}

    - name: Deploy to google app engine
      uses: actions-hub/gcloud@master
      env:
       VAPID_PUBLIC: ${{ secrets.VAPID_PUBLIC }}
       VAPID_SECRET: ${{ secrets.VAPID_SECRET }}
       GCM_API_KEY: ${{ secrets.GCM_API_KEY }}
       DATABASE_URL: ${{ secrets.DATABASE_URL }}
       GCS_BUCKET: ${{ secrets.GCS_BUCKET }}
       SERVER_URL: ${{ secrets.SERVER_URL }}
       CLOUDSDK_CORE_DISABLE_PROMPTS: 1
      with:
       args: app deploy app.yaml
