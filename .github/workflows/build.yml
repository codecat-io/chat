name: Build

on: workflow_dispatch

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Use Node.js 17.x
      uses: actions/setup-node@v3
      with:
        node-version: 17.x
        cache: 'npm'

    - name: apply secrets
      run: echo $CONFIG_FILE >> chat.config.js
      shell: bash
      env:
        CONFIG_FILE: ${{secrets.PRODUCTION_CONFIG}}

    - run: npm i --production=false

    - run: npm run build
      env: 
        NODE_ENV: production

    - run: npx cap sync
      working-directory: ./packages/app

    - name: Build with Gradle
      working-directory: ./packages/app/android
      run: ./gradlew build --warning-mode=all --stacktrace

    - name: Assemble Release Bundle
      working-directory: ./packages/app/android
      run: ./gradlew bundleRelease

    - uses: r0adkll/sign-android-release@v1
      name: Sign app APK
      id: sign_app
      with:
        releaseDirectory: ./packages/app/android/app/build/outputs/bundle/release
        signingKeyBase64: ${{ secrets.SIGNING_KEY }}
        alias: ${{ secrets.ALIAS }}
        keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
        keyPassword: ${{ secrets.KEY_PASSWORD }}
      env:
        BUILD_TOOLS_VERSION: "30.0.2"
          
    - name: Archive production artifacts
      uses: actions/upload-artifact@v3
      with:
        name: android-bundle
        path: ${{steps.sign_app.outputs.signedReleaseFile}}

  deploy:
    - name: Tag Release
      run: |
        version_name="$(cat package.json | awk '/version/{print $2}' | sed 's/[",]//g')"
        echo "Tagging release with tag $version_name"
        git tag $version_name
        git push origin --tags

    - name: Adding Known Hosts
      run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

    - name: Install SSH Key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SSH_PRIVATE_KEY }} 

    - name: push changes to remote
      run: |
        git remote add prod raay@codecat.io:/var/docker/chat/app
        git push prod master:master -f

    #- name: Create service_account.json
    #  run: echo '${{ secrets.SERVICE_ACCOUNT_JSON }}' > service_account.json

    #- name: Deploy to Alpha
    #  uses: r0adkll/upload-google-play@v1
    #  with:
    #    serviceAccountJson: service_account.json
    #    packageName: io.codecat.chat
    #    releaseFile: ${{steps.sign_app.outputs.signedReleaseFile}}
    #    track: internal

